// @generated by protoc-gen-connect-query v1.4.2 with parameter "target=ts"
// @generated from file settings/v1/recording_rules.proto (package settings.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { DeleteRecordingRuleRequest, DeleteRecordingRuleResponse, GetRecordingRuleRequest, GetRecordingRuleResponse, ListRecordingRulesRequest, ListRecordingRulesResponse, UpsertRecordingRuleRequest, UpsertRecordingRuleResponse } from "./recording_rules_pb.js";

/**
 * @generated from rpc settings.v1.RecordingRulesService.GetRecordingRule
 */
export const getRecordingRule = {
  localName: "getRecordingRule",
  name: "GetRecordingRule",
  kind: MethodKind.Unary,
  I: GetRecordingRuleRequest,
  O: GetRecordingRuleResponse,
  service: {
    typeName: "settings.v1.RecordingRulesService"
  }
} as const;

/**
 * @generated from rpc settings.v1.RecordingRulesService.ListRecordingRules
 */
export const listRecordingRules = {
  localName: "listRecordingRules",
  name: "ListRecordingRules",
  kind: MethodKind.Unary,
  I: ListRecordingRulesRequest,
  O: ListRecordingRulesResponse,
  service: {
    typeName: "settings.v1.RecordingRulesService"
  }
} as const;

/**
 * @generated from rpc settings.v1.RecordingRulesService.UpsertRecordingRule
 */
export const upsertRecordingRule = {
  localName: "upsertRecordingRule",
  name: "UpsertRecordingRule",
  kind: MethodKind.Unary,
  I: UpsertRecordingRuleRequest,
  O: UpsertRecordingRuleResponse,
  service: {
    typeName: "settings.v1.RecordingRulesService"
  }
} as const;

/**
 * @generated from rpc settings.v1.RecordingRulesService.DeleteRecordingRule
 */
export const deleteRecordingRule = {
  localName: "deleteRecordingRule",
  name: "DeleteRecordingRule",
  kind: MethodKind.Unary,
  I: DeleteRecordingRuleRequest,
  O: DeleteRecordingRuleResponse,
  service: {
    typeName: "settings.v1.RecordingRulesService"
  }
} as const;
