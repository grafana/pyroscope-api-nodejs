// @generated by protoc-gen-connect-query v1.4.2 with parameter "target=ts"
// @generated from file querier/v1/querier.proto (package querier.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { AnalyzeQueryRequest, AnalyzeQueryResponse, DiffRequest, DiffResponse, ProfileTypesRequest, ProfileTypesResponse, SelectMergeProfileRequest, SelectMergeSpanProfileRequest, SelectMergeSpanProfileResponse, SelectMergeStacktracesRequest, SelectMergeStacktracesResponse, SelectSeriesRequest, SelectSeriesResponse, SeriesRequest, SeriesResponse } from "./querier_pb.js";
import { GetProfileStatsRequest, GetProfileStatsResponse, LabelNamesRequest, LabelNamesResponse, LabelValuesRequest, LabelValuesResponse } from "../../types/v1/types_pb.js";
import { Profile } from "../../google/v1/profile_pb.js";

/**
 * ProfileType returns a list of the existing profile types.
 *
 * @generated from rpc querier.v1.QuerierService.ProfileTypes
 */
export const profileTypes = {
  localName: "profileTypes",
  name: "ProfileTypes",
  kind: MethodKind.Unary,
  I: ProfileTypesRequest,
  O: ProfileTypesResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * LabelValues returns the existing label values for the provided label names.
 *
 * @generated from rpc querier.v1.QuerierService.LabelValues
 */
export const labelValues = {
  localName: "labelValues",
  name: "LabelValues",
  kind: MethodKind.Unary,
  I: LabelValuesRequest,
  O: LabelValuesResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * LabelNames returns a list of the existing label names.
 *
 * @generated from rpc querier.v1.QuerierService.LabelNames
 */
export const labelNames = {
  localName: "labelNames",
  name: "LabelNames",
  kind: MethodKind.Unary,
  I: LabelNamesRequest,
  O: LabelNamesResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * Series returns profiles series matching the request. A series is a unique label set.
 *
 * @generated from rpc querier.v1.QuerierService.Series
 */
export const series = {
  localName: "series",
  name: "Series",
  kind: MethodKind.Unary,
  I: SeriesRequest,
  O: SeriesResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * SelectMergeStacktraces returns matching profiles aggregated in a flamegraph format. It will combine samples from within the same callstack, with each element being grouped by its function name.
 *
 * @generated from rpc querier.v1.QuerierService.SelectMergeStacktraces
 */
export const selectMergeStacktraces = {
  localName: "selectMergeStacktraces",
  name: "SelectMergeStacktraces",
  kind: MethodKind.Unary,
  I: SelectMergeStacktracesRequest,
  O: SelectMergeStacktracesResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * SelectMergeSpanProfile returns matching profiles aggregated in a flamegraph format. It will combine samples from within the same callstack, with each element being grouped by its function name.
 *
 * @generated from rpc querier.v1.QuerierService.SelectMergeSpanProfile
 */
export const selectMergeSpanProfile = {
  localName: "selectMergeSpanProfile",
  name: "SelectMergeSpanProfile",
  kind: MethodKind.Unary,
  I: SelectMergeSpanProfileRequest,
  O: SelectMergeSpanProfileResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * SelectMergeProfile returns matching profiles aggregated in pprof format. It will contain all information stored (so including filenames and line number, if ingested).
 *
 * @generated from rpc querier.v1.QuerierService.SelectMergeProfile
 */
export const selectMergeProfile = {
  localName: "selectMergeProfile",
  name: "SelectMergeProfile",
  kind: MethodKind.Unary,
  I: SelectMergeProfileRequest,
  O: Profile,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * SelectSeries returns a time series for the total sum of the requested profiles.
 *
 * @generated from rpc querier.v1.QuerierService.SelectSeries
 */
export const selectSeries = {
  localName: "selectSeries",
  name: "SelectSeries",
  kind: MethodKind.Unary,
  I: SelectSeriesRequest,
  O: SelectSeriesResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * Diff returns a diff of two profiles
 *
 * @generated from rpc querier.v1.QuerierService.Diff
 */
export const diff = {
  localName: "diff",
  name: "Diff",
  kind: MethodKind.Unary,
  I: DiffRequest,
  O: DiffResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * GetProfileStats returns profile stats for the current tenant.
 *
 * @generated from rpc querier.v1.QuerierService.GetProfileStats
 */
export const getProfileStats = {
  localName: "getProfileStats",
  name: "GetProfileStats",
  kind: MethodKind.Unary,
  I: GetProfileStatsRequest,
  O: GetProfileStatsResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;

/**
 * @generated from rpc querier.v1.QuerierService.AnalyzeQuery
 */
export const analyzeQuery = {
  localName: "analyzeQuery",
  name: "AnalyzeQuery",
  kind: MethodKind.Unary,
  I: AnalyzeQueryRequest,
  O: AnalyzeQueryResponse,
  service: {
    typeName: "querier.v1.QuerierService"
  }
} as const;
